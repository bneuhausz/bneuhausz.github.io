<script lang="ts">
  import { inject } from '@angular/core';
  import { AsyncPipe, DatePipe } from '@angular/common' with { analog: 'imports' };
  import { DOCUMENT } from '@angular/common';
  import { MarkdownComponent } from '@analogjs/content' with { analog: 'imports' };
  import { CodeCopyButtonDirective } from '../../shared/directives/code-copy-button.directive' with { analog: 'imports' };
  import { ExternalLinksDirective } from '../../shared/directives/external-links.directive' with { analog: 'imports' };
  import { injectContent } from '@analogjs/content';
  import { Meta, Title } from '@angular/platform-browser';

  import PostAttributes from '../../post-attributes';

  const post$ = injectContent<PostAttributes>('slug');
  const title = inject(Title);
  const meta = inject(Meta);
  const doc = inject(DOCUMENT);

  post$.subscribe(post => {
    title.setTitle(`${post.attributes.title} - bneuhausz.dev`);
    meta.updateTag({ name: 'description', content: post.attributes.description });
    meta.updateTag({ property: 'og:title', content: post.attributes.title });
    meta.updateTag({ property: 'og:description', content: post.attributes.description });
    meta.updateTag({ property: 'og:image', content: post.attributes.metaImage });
    meta.updateTag({ property: 'og:image:alt', content: post.attributes.metaImageDescription });

    meta.updateTag({ name: 'twitter:card', content: 'summary_large_image' });
    meta.updateTag({ name: 'twitter:title', content: post.attributes.title });
    meta.updateTag({ name: 'twitter:description', content: post.attributes.description });
    meta.updateTag({ name: 'twitter:image', content: post.attributes.metaImage });
    meta.updateTag({ name: 'twitter:image:alt', content: post.attributes.metaImageDescription });

    const ldJson = {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": post.attributes.title,
      "image": post.attributes.thumbnail,
      "author": {
        "@type": "Person",
        "name": "BÃ¡lint Neuhausz",
          "url": "https://bneuhausz.dev"
      },
      "publisher": {
        "@type": "Organization",
        "name": "bneuhausz.dev",
        "logo": {
          "@type": "ImageObject",
          "url": "https://bneuhausz.dev/images/nb_logo_small.avif"
        }
      },
      "datePublished": post.attributes.date,
      "description": post.attributes.description
    };

    const prev = doc.getElementById('blogpost-ldjson');
    if (prev) prev.remove();
    const script = doc.createElement('script');
    script.type = 'application/ld+json';
    script.id = 'blogpost-ldjson';
    script.text = JSON.stringify(ldJson);
    doc.head.appendChild(script);

    const canonicalLink: HTMLLinkElement = doc.querySelector('link[rel="canonical"]') || doc.createElement('link');
    canonicalLink.setAttribute('rel', 'canonical');
    canonicalLink.setAttribute('href', `https://yourdomain.com/blog/${post.attributes.slug}`);
    doc.head.appendChild(canonicalLink);
  });
</script>

<template>
  @if (post$ | async; as post) {
    <article class="flex flex-col items-center *:max-w-screen-xl *:mx-8 md:*:mx-32 pb-8">
      <img
        [srcset]="post.attributes.coverImageSmall + ' 480w, ' + 
          post.attributes.coverImageMedium + ' 800w, ' + 
          post.attributes.coverImage + ' 1280w'"
        sizes="(max-width: 1280px) 100vw, 1280px"
        [src]="post.attributes.coverImage"
        [alt]="post.attributes.coverImageDescription"
        class="w-full h-auto"
      />

      <p class="mb-8">{{ post.attributes.date | date: 'yyyy-MM-dd' }}</p>

      <div appCodeCopyButton appExternalLinks class="prose dark:prose-invert text-left mb-8">
        <analog-markdown [content]="post.content" />
      </div>

      <div class="card w-full sm:w-96 h-60 bg-neutral text-amber-100 card-xl shadow-sm">
        <div class="card-body items-center">
          <h2 class="card-title">Newsletter</h2>
          <p>Sign up for my - probably - monthly newsletter to receive updates about new posts and possibly other content</p>
          <div class="card-actions">
            <button class="ml-onclick-form btn btn-ghost hover:bg-amber-100 hover:text-amber-900" onclick="ml('show', 'QIrGIF', true)">Subscribe</button>
          </div>
        </div>
      </div>
    </article>
  }
</template>